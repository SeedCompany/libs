npmScope: seedcompany
affected:
  defaultBase: master

pluginsConfig:
  # Not used yet. But maybe in future...
  '@nrwl/js':
    analyzeSourceFiles: false

tasksRunnerOptions:
  default:
    runner: nx/tasks-runners/default
    options:
      cacheableOperations:
        - build
        - typecheck
        - lint
        - test

targetDefaults:
  build:
    dependsOn:
      - ^build # build deps first
    # cache based on self & deps production files
    inputs:
      - production
      - ^production

  lint:
    executor: '@nrwl/linter:eslint'
    options:
      hasTypeAwareRules: true
      maxWarnings: 0
      eslintConfig: '{projectRoot}/.eslintrc.cjs'
      lintFilePatterns:
        - '{projectRoot}/**/*.ts'
    # cache config:
    inputs:
      - default
      - '{workspaceRoot}/.eslintignore'
    outputs:
      - '{options.outputFile}'

  version:
    executor: '@jscutlery/semver:version'
    options:
      baseBranch: master
      preset: conventional
      skipCommitTypes: [build, chore, ci, docs, release, style, test]
    dependsOn:
      - build

  publish-npm:
    executor: ngx-deploy-npm:deploy
    options:
      noBuild: true

  publish-github:
    executor: '@jscutlery/semver:github'
    options:
      draft: true
      generateNotes: true

namedInputs: # aka "sets of files"
  sharedGlobals: # I guess having this named set makes it easier to exclude? Why not just put in default?
    - '{workspaceRoot}/tools/tsconfig.base.json'
  default:
    - '{projectRoot}/**/*'
    - sharedGlobals
  production:
    - default
    - '!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)'
    - '!{projectRoot}/tsconfig.spec.json'
    - '!{projectRoot}/jest.config.[jt]s'
    - '!{projectRoot}/.eslintrc.*'
    - '!{projectRoot}/CHANGELOG.md'
